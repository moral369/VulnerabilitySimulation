package a3.utils.shinhan.vulsimul;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;

import java.util.ArrayList;

/**
 * Created by songsong on 2015-03-21.
 */
public class CustomAdapter extends ArrayAdapter<CacheData> {

    private final int SERVER_RESPONSE_CODE_100 = 100;
    private final int SERVER_RESPONSE_CODE_101 = 101;
    private final int SERVER_RESPONSE_CODE_200 = 200;
    private final int SERVER_RESPONSE_CODE_201 = 201;
    private final int SERVER_RESPONSE_CODE_202 = 202;
    private final int SERVER_RESPONSE_CODE_203 = 203;
    private final int SERVER_RESPONSE_CODE_204 = 204;
    private final int SERVER_RESPONSE_CODE_205 = 205;
    private final int SERVER_RESPONSE_CODE_206 = 206;
    private final int SERVER_RESPONSE_CODE_300 = 300;
    private final int SERVER_RESPONSE_CODE_301 = 301;
    private final int SERVER_RESPONSE_CODE_302 = 302;
    private final int SERVER_RESPONSE_CODE_303 = 303;
    private final int SERVER_RESPONSE_CODE_304 = 304;
    private final int SERVER_RESPONSE_CODE_305 = 305;
    private final int SERVER_RESPONSE_CODE_306 = 306;
    private final int SERVER_RESPONSE_CODE_307 = 307;
    private final int SERVER_RESPONSE_CODE_400 = 400;
    private final int SERVER_RESPONSE_CODE_401 = 401;
    private final int SERVER_RESPONSE_CODE_402 = 402;
    private final int SERVER_RESPONSE_CODE_403 = 403;
    private final int SERVER_RESPONSE_CODE_404 = 404;
    private final int SERVER_RESPONSE_CODE_405 = 405;
    private final int SERVER_RESPONSE_CODE_406 = 406;
    private final int SERVER_RESPONSE_CODE_407 = 407;
    private final int SERVER_RESPONSE_CODE_408 = 408;
    private final int SERVER_RESPONSE_CODE_409 = 409;
    private final int SERVER_RESPONSE_CODE_410 = 410;
    private final int SERVER_RESPONSE_CODE_411 = 411;
    private final int SERVER_RESPONSE_CODE_412 = 412;
    private final int SERVER_RESPONSE_CODE_413 = 413;
    private final int SERVER_RESPONSE_CODE_414 = 414;
    private final int SERVER_RESPONSE_CODE_415 = 415;
    private final int SERVER_RESPONSE_CODE_416 = 416;
    private final int SERVER_RESPONSE_CODE_417 = 417;
    private final int SERVER_RESPONSE_CODE_500 = 500;
    private final int SERVER_RESPONSE_CODE_501 = 501;
    private final int SERVER_RESPONSE_CODE_502 = 502;
    private final int SERVER_RESPONSE_CODE_503 = 503;
    private final int SERVER_RESPONSE_CODE_504 = 504;
    private final int SERVER_RESPONSE_CODE_505 = 505;

    private final String STATUS_CODE_DEFINITION_100 = "Continue";
    private final String STATUS_CODE_DEFINITION_101 = "SwitchingProtocols";
    private final String STATUS_CODE_DEFINITION_200 = "Ok";
    private final String STATUS_CODE_DEFINITION_201 = "Created";
    private final String STATUS_CODE_DEFINITION_202 = "Accepted";
    private final String STATUS_CODE_DEFINITION_203 = "Non-AuthInfo";
    private final String STATUS_CODE_DEFINITION_204 = "NoContent";
    private final String STATUS_CODE_DEFINITION_205 = "ResetContent";
    private final String STATUS_CODE_DEFINITION_206 = "PartialContent";
    private final String STATUS_CODE_DEFINITION_300 = "MultipleChoices";
    private final String STATUS_CODE_DEFINITION_301 = "MovedPermanently";
    private final String STATUS_CODE_DEFINITION_302 = "302Found";
    private final String STATUS_CODE_DEFINITION_303 = "SeeOther";
    private final String STATUS_CODE_DEFINITION_304 = "NotModified";
    private final String STATUS_CODE_DEFINITION_305 = "UseProxy";
    private final String STATUS_CODE_DEFINITION_306 = "Unused";
    private final String STATUS_CODE_DEFINITION_307 = "TempRedirect";
    private final String STATUS_CODE_DEFINITION_400 = "BadRequest";
    private final String STATUS_CODE_DEFINITION_401 = "Unauthorized";
    private final String STATUS_CODE_DEFINITION_402 = "PaymentRequired";
    private final String STATUS_CODE_DEFINITION_403 = "Forbidden";
    private final String STATUS_CODE_DEFINITION_404 = "NotFound";
    private final String STATUS_CODE_DEFINITION_405 = "MethodNotAllowed";
    private final String STATUS_CODE_DEFINITION_406 = "NotAcceptable";
    private final String STATUS_CODE_DEFINITION_407 = "ProxyAuthRequired";
    private final String STATUS_CODE_DEFINITION_408 = "RequestTimeout";
    private final String STATUS_CODE_DEFINITION_409 = "Conflict";
    private final String STATUS_CODE_DEFINITION_410 = "Gone";
    private final String STATUS_CODE_DEFINITION_411 = "LengthRequired";
    private final String STATUS_CODE_DEFINITION_412 = "PreconditionFailed";
    private final String STATUS_CODE_DEFINITION_413 = "RequestEntityTooLarge";
    private final String STATUS_CODE_DEFINITION_414 = "Request-URITooLong";
    private final String STATUS_CODE_DEFINITION_415 = "UnsupportedMediaType";
    private final String STATUS_CODE_DEFINITION_416 = "RequestedRangeNotSatisfiable";
    private final String STATUS_CODE_DEFINITION_417 = "ExpectationFailed";
    private final String STATUS_CODE_DEFINITION_500 = "InternalServerError";
    private final String STATUS_CODE_DEFINITION_501 = "NotImplemented";
    private final String STATUS_CODE_DEFINITION_502 = "BadGateway";
    private final String STATUS_CODE_DEFINITION_503 = "ServiceUnavailable";
    private final String STATUS_CODE_DEFINITION_504 = "GatewayTimeout";
    private final String STATUS_CODE_DEFINITION_505 = "HTTPVersionNotSupported";

    public void toggle(int position) {
        mExpanded[position] = !mExpanded[position];
        notifyDataSetChanged();
    }
    private boolean[] mExpanded =
            {
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false
            };

    private final String[] url;
    Context mContext;
    private LayoutInflater mInflater;
    ArrayList<CacheData> mArrayList;

    public CustomAdapter(Context context, int textViewResourceId, String[] url, ArrayList<CacheData> arrayList) {
        super(context, textViewResourceId, arrayList);
        this.mContext = context;
        mArrayList = arrayList;
        mInflater = LayoutInflater.from(context);
        this.url = url;
    }

    @Override
    public int getCount() {
        return mArrayList.size();
    }

    @Override
    public CacheData getItem(int position) {
        return super.getItem(position);
    }

    class ViewHolder {  //뷰 홀더 임시 클래스 하나 생성한다. 이 요소들은 list_item의 각 요소들의 리소스가 할당 되어 convertView로 관리된다.
        public TextView tv1;
        public ImageView iv1;
        public TextView tv2;
        public TextView tv3;
        public CacheData cacheData;
        public ProgressBar progressBar;
    }
    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;
        View row = convertView;
        final CacheData cacheData = getItem(position);
        if(row == null) {
            row = mInflater.inflate(R.layout.layout, parent, false);

            holder = new ViewHolder();
            holder.tv1 = (TextView) row.findViewById(R.id.tv1);
            holder.tv2 = (TextView) row.findViewById(R.id.tv2);
            holder.tv3 = (TextView) row.findViewById(R.id.tv3);
//            holder.progressBar = (ProgressBar) row.findViewById(R.id.loading);
            holder.cacheData = cacheData;
            holder.iv1 = (ImageView) row.findViewById(R.id.iv1);
            row.setTag(holder);
        } else {
            holder = (ViewHolder) row.getTag();
            holder.cacheData.setProgressBar(null);
            holder.cacheData = cacheData;
            holder.cacheData.setProgressBar(holder.progressBar);
        }

        int serverResponseCode = mArrayList.get(position).responseCode;

        switch (serverResponseCode) {

            case SERVER_RESPONSE_CODE_100:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_100);
                break;

            case SERVER_RESPONSE_CODE_101:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_101);
                break;


            case SERVER_RESPONSE_CODE_200:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_200);
                break;

            case SERVER_RESPONSE_CODE_201:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_200);
                break;

            case SERVER_RESPONSE_CODE_202:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_200);
                break;


            case SERVER_RESPONSE_CODE_203:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_203);
                break;

            case SERVER_RESPONSE_CODE_204:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_204);
                break;
            case SERVER_RESPONSE_CODE_205:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_205);
                break;
            case SERVER_RESPONSE_CODE_206:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_206);
                break;

            case SERVER_RESPONSE_CODE_300:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_300);
                break;

            case SERVER_RESPONSE_CODE_301:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_301);
                break;
            case SERVER_RESPONSE_CODE_302:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_302);
                break;

            case SERVER_RESPONSE_CODE_303:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_303);
                break;

            case SERVER_RESPONSE_CODE_304:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_304);
                break;

            case SERVER_RESPONSE_CODE_305:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_305);
                break;

            case SERVER_RESPONSE_CODE_306:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_306);
                break;

            case SERVER_RESPONSE_CODE_307:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_307);
                break;

            case SERVER_RESPONSE_CODE_400:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_400);
                break;

            case SERVER_RESPONSE_CODE_401:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_401);
                break;

            case SERVER_RESPONSE_CODE_402:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_402);
                break;
            case SERVER_RESPONSE_CODE_403:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_403);
                break;

            case SERVER_RESPONSE_CODE_404:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_404);
                break;

            case SERVER_RESPONSE_CODE_405:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_405);
                break;

            case SERVER_RESPONSE_CODE_406:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_406);
                break;

            case SERVER_RESPONSE_CODE_407:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_407);
                break;

            case SERVER_RESPONSE_CODE_408:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_408);
                break;

            case SERVER_RESPONSE_CODE_409:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_409);
                break;

            case SERVER_RESPONSE_CODE_410:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_410);
                break;

            case SERVER_RESPONSE_CODE_411:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_411);
                break;

            case SERVER_RESPONSE_CODE_412:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_412);
                break;

            case SERVER_RESPONSE_CODE_413:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_413);
                break;

            case SERVER_RESPONSE_CODE_414:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_414);
                break;
            case SERVER_RESPONSE_CODE_415:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_415);
                break;
            case SERVER_RESPONSE_CODE_416:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_416);
                break;
            case SERVER_RESPONSE_CODE_417:
                holder.iv1.setImageResource(R.drawable.green);
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_417);
                break;
            case SERVER_RESPONSE_CODE_500:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_500);
                break;
            case SERVER_RESPONSE_CODE_501:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_500);
                break;
            case SERVER_RESPONSE_CODE_502:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_500);
                break;
            case SERVER_RESPONSE_CODE_503:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_500);
                break;
            case SERVER_RESPONSE_CODE_504:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_500);
                break;
            case SERVER_RESPONSE_CODE_505:
                holder.tv1.setText(url[position]);
                holder.tv2.setText(String.valueOf(serverResponseCode));
                holder.tv3.setText(STATUS_CODE_DEFINITION_505);
                break;
        }


//        String temp3 = String.valueOf(temp2.charAt(0));
//        holder.progressBar.setProgress(cacheData.getProgress());
        cacheData.setProgressBar(holder.progressBar);
        cacheData.setDownloadState(CacheData.DownloadState.QUEUED);

        return row;

    }
}
