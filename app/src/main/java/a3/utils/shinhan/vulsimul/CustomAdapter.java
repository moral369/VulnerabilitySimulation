package a3.utils.shinhan.vulsimul;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;

import java.util.ArrayList;

/**
 * Created by songsong on 2015-03-21.
 */
public class CustomAdapter extends ArrayAdapter<CacheData> {

    public void toggle(int position) {
        mExpanded[position] = !mExpanded[position];
        notifyDataSetChanged();
    }
    private boolean[] mExpanded =
            {
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false
            };

    private final String[] url;
    Context mContext;
    private LayoutInflater mInflater;
    ArrayList<CacheData> mArrayList;

    public CustomAdapter(Context context, int textViewResourceId, String[] url, ArrayList<CacheData> arrayList) {
        super(context, textViewResourceId, arrayList);
        this.mContext = context;
        mArrayList = arrayList;
        mInflater = LayoutInflater.from(context);
        this.url = url;
    }

    @Override
    public int getCount() {
        return mArrayList.size();
    }

    @Override
    public CacheData getItem(int position) {
        return super.getItem(position);
    }

    class ViewHolder {  //뷰 홀더 임시 클래스 하나 생성한다. 이 요소들은 list_item의 각 요소들의 리소스가 할당 되어 convertView로 관리된다.
        public TextView tv1;
        public ImageView iv1;
        public TextView tv2;
        public CacheData cacheData;
        public ProgressBar progressBar;
    }
    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;
        View row = convertView;
        final CacheData cacheData = getItem(position);
        if(row == null) {
            row = mInflater.inflate(R.layout.layout, parent, false);

            holder = new ViewHolder();
            holder.tv1 = (TextView) row.findViewById(R.id.tv1);
            holder.tv2 = (TextView) row.findViewById(R.id.tv2);
//            holder.progressBar = (ProgressBar) row.findViewById(R.id.loading);
            holder.cacheData = cacheData;
            holder.iv1 = (ImageView) row.findViewById(R.id.iv1);
            row.setTag(holder);
        } else {
            holder = (ViewHolder) row.getTag();
            holder.cacheData.setProgressBar(null);
            holder.cacheData = cacheData;
            holder.cacheData.setProgressBar(holder.progressBar);
        }

        /*switch (position) {
            case 0:
                holder.tv1.setText(url[position]);
                break;
        }*/

        holder.tv1.setText(url[position]);
        int temp = mArrayList.get(position).responseCode;
        String temp2 = String.valueOf(temp);
        holder.tv2.setText(temp2);
        if(temp==404) {
            holder.iv1.setImageResource(R.drawable.green);
        }
//        holder.progressBar.setProgress(cacheData.getProgress());
        cacheData.setProgressBar(holder.progressBar);

        cacheData.setDownloadState(CacheData.DownloadState.QUEUED);

        return row;

    }
}
